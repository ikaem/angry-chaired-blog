<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Angry Chaired Blog</title>
  <icon>https://ikaem.github.io/angry-chaired-blog/icon.png</icon>
  <subtitle>Writing about my web development learning...</subtitle>
  <link href="https://ikaem.github.io/angry-chaired-blog/atom.xml" rel="self"/>
  
  <link href="https://ikaem.github.io/angry-chaired-blog/"/>
  <updated>2020-08-17T07:54:39.156Z</updated>
  <id>https://ikaem.github.io/angry-chaired-blog/</id>
  
  <author>
    <name>kaem</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Blog: Deploy to Github Pages</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-deploy-to-github-pages/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-deploy-to-github-pages/</id>
    <published>2020-08-17T07:50:09.000Z</published>
    <updated>2020-08-17T07:54:39.156Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-Part-8-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-Part-8-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part Part 8 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part Part 8 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;Finally, we reached the deployment part. We will deploy to Github Pages, and we will use the &lt;a href=&quot;https://hexo.io/docs/github-pages#One-command-deployment&quot;&gt;One-command deployment option&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="deploy" scheme="https://ikaem.github.io/angry-chaired-blog/tags/deploy/"/>
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
    <category term="github pages" scheme="https://ikaem.github.io/angry-chaired-blog/tags/github-pages/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog: Add Comments to the Blog</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-add-comments-to-the-blog/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-add-comments-to-the-blog/</id>
    <published>2020-08-17T07:42:13.000Z</published>
    <updated>2020-08-17T07:48:59.595Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-7-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-7-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part 7 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part 7 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;Most Hexo themes, including the default one, come with a support for &lt;a href=&quot;https://dustinpfister.github.io/2018/06/14/hexo-disqus/&quot;&gt;Disqus&lt;/a&gt; comments.&lt;br&gt;However, we will use another option, &lt;a href=&quot;https://groups.hyvor.com/HyvorTalk/463/adding-comments-to-your-hexo-blog&quot;&gt;Hyvor&lt;/a&gt;, to add comments to our blog.&lt;br&gt;It is a pretty straightforward setup, and the comment containers looks nice too&lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
    <category term="hyvor" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hyvor/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog: Installing Themes</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-installing-themes/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-installing-themes/</id>
    <published>2020-08-17T07:27:08.000Z</published>
    <updated>2020-08-17T07:32:54.721Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-6-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-6-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part 6 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part 6 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;Hexo lists a selection of themes on their &lt;a href=&quot;https://hexo.io/docs/helpers.html&quot;&gt;website&lt;/a&gt;. These seem to be made by its community, so one can see modern looking themes combined with those looking like they were from 2000s.&lt;br&gt;Themes are also made with various technologies, some have bugs, and some seem to be forgotten. &lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog: Customizing Default Theme</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-customizing-default-theme/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-customizing-default-theme/</id>
    <published>2020-08-17T07:18:45.000Z</published>
    <updated>2020-08-17T07:28:54.514Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-5-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-5-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part 5 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part 5 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;For me, the default theme that Hexo comes with, is both bad and good. It looks bad, plain and simple. But, to be honest, I don’t find other available themes very beginner friendly, so I stuck with this one. The good thing is that it is very simple in terms of configuration and technology it uses, so we can fix some of it.&lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog: Customizing Posts</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-customizing-posts/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-customizing-posts/</id>
    <published>2020-08-17T07:01:29.000Z</published>
    <updated>2020-08-17T07:30:38.608Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-4-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-4-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part 4 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part 4 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;Hexo makes it very simple to adjust the post content. We will add image and code files to our posts, and will see how we can show post excerpts on the home page, so users know what to expect from a post. While most of these things are possible with the usual Markdown syntax, Hexo offers few tools to make post customization more effective.&lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog: Configuring the Blog</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-configuring-the-blog/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-configuring-the-blog/</id>
    <published>2020-08-17T06:56:24.000Z</published>
    <updated>2020-08-17T07:00:40.776Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-3-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-3-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part 3 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part 3 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;In this post we will configure our new blog with the &lt;strong&gt;_config.yml&lt;/strong&gt; file. Hexo’s configuration file helps with SEO and prepares the website for deployment. It is also used to configure permalinks, installed plugins, themes, and much more. &lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog: Create Content</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-create-content/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-create-content/</id>
    <published>2020-08-17T06:50:23.000Z</published>
    <updated>2020-08-17T06:55:13.080Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-2-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-2-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part 2 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part 2 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;Hexo can use Markdown to create blog content. We will create few new posts, a page and a draft, and then see how Hexo scaffolds can help us to prepare an outline of our content and make its creation simpler. &lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog: Create Hexo Projext</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-create-hexo-projext/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/hexo-blog-create-hexo-projext/</id>
    <published>2020-08-17T06:31:18.000Z</published>
    <updated>2020-08-17T06:43:45.782Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-1-of-8-in-Hexo-Blog&quot;&gt;&lt;a href=&quot;#Part-1-of-8-in-Hexo-Blog&quot; class=&quot;headerlink&quot; title=&quot;Part 1 of 8 in Hexo Blog&quot;&gt;&lt;/a&gt;Part 1 of 8 in Hexo Blog&lt;/h4&gt;&lt;p&gt;I wanted to try Hexo to move away from Wordpress. It is that simple.&lt;br&gt;Wordpress is big, there are tons of options, and they require lots of clicking.&lt;br&gt;I just need a simple blog, and Wordpress seems to be aimed for much more than that.&lt;/p&gt;
&lt;p&gt;I did try Hexo before, and I just didn’t find it interesting. Right now, though, I had a reson to dig deeper. Hexo generates static files, so that is cool. It uses Markdown, and it supports themes and plugins. So I decided to give it another shot. &lt;/p&gt;
&lt;p&gt;That’s pretty much it. I don’t have any big idea here, but I have instead decided to follow its &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt;, and add features that I find interesting. &lt;/p&gt;</summary>
    
    
    
    <category term="hexo blog" scheme="https://ikaem.github.io/angry-chaired-blog/categories/hexo-blog/"/>
    
    
    <category term="hexo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/hexo/"/>
    
    <category term="blog" scheme="https://ikaem.github.io/angry-chaired-blog/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Audit, Optimize &amp; Deploy</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-audit-optimize-deploy/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-audit-optimize-deploy/</id>
    <published>2020-08-17T06:06:39.000Z</published>
    <updated>2020-08-17T06:33:12.102Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-10-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-10-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 10 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 10 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;After making our components, programmatically creating pages, inserting images and implementing messaging funcitonality, last thing to do is to actually put our website online. &lt;/p&gt;
&lt;p&gt;Before we do that, however, let’s tweak it a bit more.&lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby/"/>
    
    <category term="deploy" scheme="https://ikaem.github.io/angry-chaired-blog/tags/deploy/"/>
    
    <category term="surge" scheme="https://ikaem.github.io/angry-chaired-blog/tags/surge/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Implement Messaging Feature</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-implement-messaging-feature/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-implement-messaging-feature/</id>
    <published>2020-08-17T05:59:20.000Z</published>
    <updated>2020-08-17T06:05:49.057Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-9-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-9-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 9 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 9 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;The &lt;strong&gt;Contact&lt;/strong&gt; page contains a simple form that users could use to send us a message. There is also a list of other ways on how to contact us, but we want to offer a quick and simple way too, so users can do it on the spot.&lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby/"/>
    
    <category term="messaging" scheme="https://ikaem.github.io/angry-chaired-blog/tags/messaging/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Gatsby Images</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-gatsby-images/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-gatsby-images/</id>
    <published>2020-08-17T05:50:36.000Z</published>
    <updated>2020-08-17T06:05:46.230Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-8-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-8-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 8 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 8 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;Inserting local images into a Gatsby website can be very simple. We can simply put them into the &lt;a href=&quot;https://www.gatsbyjs.org/docs/static-folder&quot;&gt;static folder&lt;/a&gt; that exists in the root of our project, and that is it.&lt;br&gt;Gatsby documentation, however, does not encourage it, and instead recommendes that we use a plugin for this.&lt;/p&gt;
&lt;p&gt;This plugin is &lt;strong&gt;gatsby-image&lt;/strong&gt;, and it is used in combination with few other plugins: &lt;strong&gt;gatsby-transformer-sharp&lt;/strong&gt; and &lt;strong&gt;gatsby-plugin-sharp&lt;/strong&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby plugins" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby-plugins/"/>
    
    <category term="images" scheme="https://ikaem.github.io/angry-chaired-blog/tags/images/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Insert Markdown in Gatsby Pages</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-insert-markdown-in-gatsby-pages/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-insert-markdown-in-gatsby-pages/</id>
    <published>2020-08-17T05:43:48.000Z</published>
    <updated>2020-08-17T05:52:07.821Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-7-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-7-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 7 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 7 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;Before we even start, I need to say that Markdown is meant to style text, and not websites. Unfortunately, I went into this expecting to style a page in a certain way, and then just insert pieces of Markdown body into their places, or to style elements in the Markdown document directly.&lt;br&gt;While this is possible, it is a bit of a pain, and more importantly, it goes against the point of Markdown. &lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby plugins" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby-plugins/"/>
    
    <category term="markdowns" scheme="https://ikaem.github.io/angry-chaired-blog/tags/markdowns/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Programatically Create Pages</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-programatically-create-pages/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-programatically-create-pages/</id>
    <published>2020-08-17T05:35:15.000Z</published>
    <updated>2020-08-17T05:40:56.705Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-6-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-6-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 6 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 6 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;As we mentioned in the previous post, this one will be about creating new pages. We will create them programatically, based on Markdown documents that exist in our project.&lt;br&gt;We will also create a template to hold project information that we get from Markdown documents.&lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Manipulate Markdown with Transformer Remark Plugin</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-manipulate-markdown-with-transformer-remark-plugin/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-manipulate-markdown-with-transformer-remark-plugin/</id>
    <published>2020-08-16T20:37:15.000Z</published>
    <updated>2020-08-16T20:43:05.702Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-5-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-5-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 5 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 5 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;The idea of this project was to create a portfolio of learning projects I worked on. To do that, I need a way to store project information, and this would ideally be in form of a file.&lt;br&gt;Of course, I could have had a database, and store this information there. We are working with Gatsby, however, and Gatsby can use Markdown, so we use Markdown.&lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby plugins" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby-plugins/"/>
    
    <category term="markdown" scheme="https://ikaem.github.io/angry-chaired-blog/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Getting Data with GraphQL &amp; Filesystem Plugin</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-getting-data-with-graphql-filesystem-plugin/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-getting-data-with-graphql-filesystem-plugin/</id>
    <published>2020-08-16T20:28:18.000Z</published>
    <updated>2020-08-16T20:35:16.761Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-4-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-4-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 4 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 4 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;Gatsby is all about GraphQL. We incorporate our site’s metadata into pages with it, we use it to get data from files, and to get and work with images, and so on. &lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby/"/>
    
    <category term="graphql" scheme="https://ikaem.github.io/angry-chaired-blog/tags/graphql/"/>
    
    <category term="gatsby plugins" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby-plugins/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Styled Components</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-styled-components/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-styled-components/</id>
    <published>2020-08-16T20:19:00.000Z</published>
    <updated>2020-08-16T20:25:56.966Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-3-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-3-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 3 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 3 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;At the moment, our app looks pretty dry. In fact, it is ugly. We have to style it a bit.&lt;br&gt;Official Gatsby tutorial goes with CSS Modules when it comes to styling.&lt;br&gt;However, I prefer Styled Components. It allows us to have styles in the same file as React components, we can nest style rules like with Sass, and we can define global styles with it, too. &lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby/"/>
    
    <category term="styled components" scheme="https://ikaem.github.io/angry-chaired-blog/tags/styled-components/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: Gatsby &amp; React Components</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-gatsby-react-components/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-gatsby-react-components/</id>
    <published>2020-08-16T20:08:44.000Z</published>
    <updated>2020-08-16T20:17:43.833Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-2-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-2-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 2 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 2 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;Now when we have our basic pages, let’s add some structure to our website.&lt;br&gt;Since all websites have header and footer, it would probably be good that our site has those as well.&lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby/"/>
    
    <category term="react" scheme="https://ikaem.github.io/angry-chaired-blog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>Gatsby Web: New Gatsby Project with TypeScript</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-new-gatsby-project-with-typescript/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/gatsby-web-new-gatsby-project-with-typescript/</id>
    <published>2020-08-16T19:47:07.000Z</published>
    <updated>2020-08-16T20:11:14.858Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-1-of-10-in-Gatsby-Web&quot;&gt;&lt;a href=&quot;#Part-1-of-10-in-Gatsby-Web&quot; class=&quot;headerlink&quot; title=&quot;Part 1 of 10 in Gatsby Web&quot;&gt;&lt;/a&gt;Part 1 of 10 in Gatsby Web&lt;/h4&gt;&lt;p&gt;This project relies heavily on the &lt;a href=&quot;https://www.gatsbyjs.org/tutorial/&quot;&gt;Gatsby official tutorial&lt;/a&gt;. I did modify it somewhat, using TS instead of JS, messing with the filesystem plugin a bit, and straying on occasion when the website needed something different from the tutorial. &lt;/p&gt;
&lt;p&gt;The idea here is to create a website where I will eventually be able to show my projects, and then sometime in the future even move the blog to.&lt;br&gt;I see Gatsby mentioned a lot around the web, so I figured to use it for this project. &lt;/p&gt;</summary>
    
    
    
    <category term="gatsby web" scheme="https://ikaem.github.io/angry-chaired-blog/categories/gatsby-web/"/>
    
    
    <category term="gatsby" scheme="https://ikaem.github.io/angry-chaired-blog/tags/gatsby/"/>
    
    <category term="typescript" scheme="https://ikaem.github.io/angry-chaired-blog/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>GraphQL &amp; React &amp; JWT: Register Functionality</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/graphql-react-jwt-register-functionality/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/graphql-react-jwt-register-functionality/</id>
    <published>2020-08-16T19:26:21.000Z</published>
    <updated>2020-08-16T19:38:27.856Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-12-of-12-in-GraphQL-amp-React-amp-JWT&quot;&gt;&lt;a href=&quot;#Part-12-of-12-in-GraphQL-amp-React-amp-JWT&quot; class=&quot;headerlink&quot; title=&quot;Part 12 of 12 in GraphQL &amp;amp; React &amp;amp; JWT&quot;&gt;&lt;/a&gt;Part 12 of 12 in GraphQL &amp;amp; React &amp;amp; JWT&lt;/h4&gt;&lt;p&gt;The last functionality is the &lt;strong&gt;register&lt;/strong&gt; one. The functionality is very similar to the &lt;strong&gt;login&lt;/strong&gt; one, in that we have a mutation that accepts arguments, which are extracted from references to form inputs on the register page.&lt;/p&gt;</summary>
    
    
    
    <category term="graphql &amp; react &amp; jwt" scheme="https://ikaem.github.io/angry-chaired-blog/categories/graphql-react-jwt/"/>
    
    
    <category term="graphql" scheme="https://ikaem.github.io/angry-chaired-blog/tags/graphql/"/>
    
    <category term="frontend" scheme="https://ikaem.github.io/angry-chaired-blog/tags/frontend/"/>
    
    <category term="apollo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/apollo/"/>
    
    <category term="jwt" scheme="https://ikaem.github.io/angry-chaired-blog/tags/jwt/"/>
    
    <category term="authentication" scheme="https://ikaem.github.io/angry-chaired-blog/tags/authentication/"/>
    
  </entry>
  
  <entry>
    <title>GraphQL &amp; React &amp; JWT: Silent Token Refresh</title>
    <link href="https://ikaem.github.io/angry-chaired-blog/2020/graphql-react-jwt-silent-token-refresh/"/>
    <id>https://ikaem.github.io/angry-chaired-blog/2020/graphql-react-jwt-silent-token-refresh/</id>
    <published>2020-08-16T19:13:51.000Z</published>
    <updated>2020-08-16T19:19:00.970Z</updated>
    
    
    <summary type="html">&lt;!-- Step Content Start --&gt;

&lt;h4 id=&quot;Part-11-of-12-in-GraphQL-amp-React-amp-JWT&quot;&gt;&lt;a href=&quot;#Part-11-of-12-in-GraphQL-amp-React-amp-JWT&quot; class=&quot;headerlink&quot; title=&quot;Part 11 of 12 in GraphQL &amp;amp; React &amp;amp; JWT&quot;&gt;&lt;/a&gt;Part 11 of 12 in GraphQL &amp;amp; React &amp;amp; JWT&lt;/h4&gt;</summary>
    
    
    
    <category term="graphql &amp; react &amp; jwt" scheme="https://ikaem.github.io/angry-chaired-blog/categories/graphql-react-jwt/"/>
    
    
    <category term="graphql" scheme="https://ikaem.github.io/angry-chaired-blog/tags/graphql/"/>
    
    <category term="frontend" scheme="https://ikaem.github.io/angry-chaired-blog/tags/frontend/"/>
    
    <category term="apollo" scheme="https://ikaem.github.io/angry-chaired-blog/tags/apollo/"/>
    
    <category term="jwt" scheme="https://ikaem.github.io/angry-chaired-blog/tags/jwt/"/>
    
    <category term="authentication" scheme="https://ikaem.github.io/angry-chaired-blog/tags/authentication/"/>
    
  </entry>
  
</feed>
